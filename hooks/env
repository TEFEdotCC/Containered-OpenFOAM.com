#!/bin/bash

#
[ -n "$SOURCE_BRANCH" ]  || SOURCE_BRANCH=$(git symbolic-ref -q --short HEAD)
[ -n "$GIT_SHA1" ]       || GIT_SHA1=$(git rev-parse -q HEAD)

#
#
export OPENFOAM_GIT_BASE_URL="https://develop.openfoam.com/Development"
export OPENFOAM_GIT_URL="${OPENFOAM_GIT_BASE_URL}/openfoam.git"
export OPENFOAM_THIRDPARTY_GIT_URL="${OPENFOAM_GIT_BASE_URL}/ThirdParty-common.git"

# get openfoam version from repository
export OPENFOAM_MASTER_VERSION=$(                                       \
    curl -s "${OPENFOAM_GIT_BASE_URL}/openfoam/-/raw/master/etc/bashrc" \
  | grep "export WM_PROJECT_VERSION=" |                                 \
    awk -F"=" '{print $2}'                                              \
)

#
if [ "$SOURCE_BRANCH" = "develop" ]; then
  #
  # branch : develop
  #   mostly stable branch for next release.
  export OPENFOAM_VERSION="develop"
  export OPENFOAM_GIT_BRANCH="develop"
  export OPENFOAM_THIRDPARTY_GIT_BRANCH="develop"
  export IMAGE_VERSION="dev"

elif [ $(git ls-remote --heads $OPENFOAM_GIT_URL "maintenance-$SOURCE_BRANCH" | wc -l) -eq 1 ]; then
  #
  # branch : maintenance-...
  #   previous releases with bug fixes
  export OPENFOAM_VERSION="$SOURCE_BRANCH"
  export IMAGE_VERSION="$OPENFOAM_VERSION"
  export OPENFOAM_GIT_BRANCH="maintenance-$OPENFOAM_VERSION"
  export OPENFOAM_THIRDPARTY_GIT_BRANCH="$OPENFOAM_VERSION"

elif [ "$SOURCE_BRANCH" = "master" ] || [ $(git ls-remote $OPENFOAM_GIT_URL "OpenFOAM-$OPENFOAM_MASTER_VERSION" | wc -l) -eq 1 ]; then
  #
  # branch : master
  #   last releases with bug fixes, should be mostly stable
  export OPENFOAM_VERSION="$OPENFOAM_MASTER_VERSION"
  export OPENFOAM_GIT_BRANCH="master"
  export OPENFOAM_THIRDPARTY_GIT_BRANCH="main"

  if [ "$SOURCE_BRANCH" = "master" ];then
    export IMAGE_VERSION="latest"
  else
    export IMAGE_VERSION="$OPENFOAM_VERSION"
  fi
else
  echo "FATAL: OpenFOAM version detection error."
  exit -1
fi

#
# Set defaults for build arguments 
[ -n "$SOURCE_TYPE" ]        || SOURCE_TYPE=git
[ -n "$DOCKERFILE_PATH" ]    || DOCKERFILE_PATH=.
[ -n "$IMAGE_NAME" ]         || IMAGE_NAME=tefe/openfoam.com:$IMAGE_VERSION
